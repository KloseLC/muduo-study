BlockingQueue
  阻塞队列的解析
  
    BlockingQueue()
    : mutex_(),
      notEmpty_(mutex_),
      queue_()
  {
  }
  
    void put(const T& x)
  {
    MutexLockGuard lock(mutex_);
    queue_.push_back(x);
    notEmpty_.notify(); // wait morphing saves us
    // http://www.domaigne.com/blog/computing/condvars-signal-with-mutex-locked-or-not/
  }
  push一次执行一次
  
  
   void put(T&& x)
  {
    MutexLockGuard lock(mutex_);
    queue_.push_back(std::move(x));
    notEmpty_.notify();
  }
  这是右值引用
  
    T take()
  {
    MutexLockGuard lock(mutex_);
    // always use a while-loop, due to spurious wakeup
    while (queue_.empty())
    {
      notEmpty_.wait();
    }
    assert(!queue_.empty());
    T front(std::move(queue_.front()));
    queue_.pop_front();
    return front;
  }
  移除返回移除的变量 
  
    size_t size() const
  {
    MutexLockGuard lock(mutex_);
    return queue_.size();
  }
  队列元素个数
  
  成员变量:
    mutable MutexLock mutex_;
    Condition         notEmpty_ GUARDED_BY(mutex_);
    std::deque<T>     queue_ GUARDED_BY(mutex_);

  
  
  
  
  
  
  
  
